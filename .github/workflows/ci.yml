name: CI
on:
  push:
    branches: [main, master]
  pull_request:

env:
  PLUGIN: "nord.nvim"

jobs:
  config:
    name: Repo Config
    runs-on: ubuntu-latest
    outputs:
      has_tests: ${{ steps.tests.outputs.has_tests }}
      has_docs: ${{ steps.docs.outputs.has_docs }}
    steps:
      - uses: actions/checkout@v4
      - id: tests
        run: echo "has_tests=${{ hashFiles('scripts/test') != '' }}" >> "$GITHUB_OUTPUT"
      - id: docs
        run: echo "has_docs=${{ hashFiles('scripts/docs') != '' }}" >> "$GITHUB_OUTPUT"

  stylua:
    name: Stylua
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check lua

  check-debug:
    name: Check that no debug messages are left
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Debug
        run: /bin/grep --line-number -r -P '^(?!\s*--).*\\bdd\(' --color=always lua && exit 1 || echo "No debug messages found"

  tests:
    runs-on: ubuntu-latest
    needs: config
    timeout-minutes: 10
    if: ${{ needs.config.outputs.has_tests == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: .github/neovim@main
      - name: Test Cache
        uses: actions/cache@v4
        with:
          path: .tests
          key: ${{ runner.os }}-tests-${{ hashFiles('tests/minit.lua', 'scripts/test') }}
      - name: Run Tests
        run: ./scripts/test


  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [config, tests]
    if: ${{ github.ref == 'refs/heads/main' && !failure() }}
    steps:
      - uses: actions/checkout@v4
      - run: git pull
      - uses: .github/neovim@main
      - name: Generate docs
        if: ${{ needs.config.outputs.has_docs == 'true' }}
        shell: bash
        run: ./scripts/docs
      - name: Create /doc
        run: mkdir -p doc
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: ${{ env.PLUGIN }}
          version: "Neovim"
          demojify: true
          treesitter: true
      - run: git pull
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(build): auto-generate docs"
